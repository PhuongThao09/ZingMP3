// 
// Decompiled by Procyon v0.5.30
// 

package com.b.a;

public enum i
{
    A("TLS_KRB5_EXPORT_WITH_RC4_40_SHA", 40, 2712, 6, Integer.MAX_VALUE), 
    B("TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5", 41, 2712, 6, Integer.MAX_VALUE), 
    C("TLS_KRB5_EXPORT_WITH_RC4_40_MD5", 43, 2712, 6, Integer.MAX_VALUE), 
    D("TLS_RSA_WITH_AES_128_CBC_SHA", 47, 5246, 6, 10), 
    E("TLS_DHE_DSS_WITH_AES_128_CBC_SHA", 50, 5246, 6, 10), 
    F("TLS_DHE_RSA_WITH_AES_128_CBC_SHA", 51, 5246, 6, 10), 
    G("TLS_DH_anon_WITH_AES_128_CBC_SHA", 52, 5246, 6, 10), 
    H("TLS_RSA_WITH_AES_256_CBC_SHA", 53, 5246, 6, 10), 
    I("TLS_DHE_DSS_WITH_AES_256_CBC_SHA", 56, 5246, 6, 10), 
    J("TLS_DHE_RSA_WITH_AES_256_CBC_SHA", 57, 5246, 6, 10), 
    K("TLS_DH_anon_WITH_AES_256_CBC_SHA", 58, 5246, 6, 10), 
    L("TLS_RSA_WITH_NULL_SHA256", 59, 5246, 7, 21), 
    M("TLS_RSA_WITH_AES_128_CBC_SHA256", 60, 5246, 7, 21), 
    N("TLS_RSA_WITH_AES_256_CBC_SHA256", 61, 5246, 7, 21), 
    O("TLS_DHE_DSS_WITH_AES_128_CBC_SHA256", 64, 5246, 7, 21), 
    P("TLS_DHE_RSA_WITH_AES_128_CBC_SHA256", 103, 5246, 7, 21), 
    Q("TLS_DHE_DSS_WITH_AES_256_CBC_SHA256", 106, 5246, 7, 21), 
    R("TLS_DHE_RSA_WITH_AES_256_CBC_SHA256", 107, 5246, 7, 21), 
    S("TLS_DH_anon_WITH_AES_128_CBC_SHA256", 108, 5246, 7, 21), 
    T("TLS_DH_anon_WITH_AES_256_CBC_SHA256", 109, 5246, 7, 21), 
    U("TLS_RSA_WITH_AES_128_GCM_SHA256", 156, 5288, 8, 21), 
    V("TLS_RSA_WITH_AES_256_GCM_SHA384", 157, 5288, 8, 21), 
    W("TLS_DHE_RSA_WITH_AES_128_GCM_SHA256", 158, 5288, 8, 21), 
    X("TLS_DHE_RSA_WITH_AES_256_GCM_SHA384", 159, 5288, 8, 21), 
    Y("TLS_DHE_DSS_WITH_AES_128_GCM_SHA256", 162, 5288, 8, 21), 
    Z("TLS_DHE_DSS_WITH_AES_256_GCM_SHA384", 163, 5288, 8, 21), 
    a("SSL_RSA_WITH_NULL_MD5", 1, 5246, 6, 10), 
    aA("TLS_ECDH_anon_WITH_AES_128_CBC_SHA", 49176, 4492, 7, 14), 
    aB("TLS_ECDH_anon_WITH_AES_256_CBC_SHA", 49177, 4492, 7, 14), 
    aC("TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256", 49187, 5289, 7, 21), 
    aD("TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384", 49188, 5289, 7, 21), 
    aE("TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256", 49189, 5289, 7, 21), 
    aF("TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384", 49190, 5289, 7, 21), 
    aG("TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256", 49191, 5289, 7, 21), 
    aH("TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384", 49192, 5289, 7, 21), 
    aI("TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256", 49193, 5289, 7, 21), 
    aJ("TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384", 49194, 5289, 7, 21), 
    aK("TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256", 49195, 5289, 8, 21), 
    aL("TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384", 49196, 5289, 8, 21), 
    aM("TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256", 49197, 5289, 8, 21), 
    aN("TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384", 49198, 5289, 8, 21), 
    aO("TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256", 49199, 5289, 8, 21), 
    aP("TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384", 49200, 5289, 8, 21), 
    aQ("TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256", 49201, 5289, 8, 21), 
    aR("TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384", 49202, 5289, 8, 21), 
    aa("TLS_DH_anon_WITH_AES_128_GCM_SHA256", 166, 5288, 8, 21), 
    ab("TLS_DH_anon_WITH_AES_256_GCM_SHA384", 167, 5288, 8, 21), 
    ac("TLS_EMPTY_RENEGOTIATION_INFO_SCSV", 255, 5746, 6, 14), 
    ad("TLS_ECDH_ECDSA_WITH_NULL_SHA", 49153, 4492, 7, 14), 
    ae("TLS_ECDH_ECDSA_WITH_RC4_128_SHA", 49154, 4492, 7, 14), 
    af("TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA", 49155, 4492, 7, 14), 
    ag("TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA", 49156, 4492, 7, 14), 
    ah("TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA", 49157, 4492, 7, 14), 
    ai("TLS_ECDHE_ECDSA_WITH_NULL_SHA", 49158, 4492, 7, 14), 
    aj("TLS_ECDHE_ECDSA_WITH_RC4_128_SHA", 49159, 4492, 7, 14), 
    ak("TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA", 49160, 4492, 7, 14), 
    al("TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA", 49161, 4492, 7, 14), 
    am("TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA", 49162, 4492, 7, 14), 
    an("TLS_ECDH_RSA_WITH_NULL_SHA", 49163, 4492, 7, 14), 
    ao("TLS_ECDH_RSA_WITH_RC4_128_SHA", 49164, 4492, 7, 14), 
    ap("TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA", 49165, 4492, 7, 14), 
    aq("TLS_ECDH_RSA_WITH_AES_128_CBC_SHA", 49166, 4492, 7, 14), 
    ar("TLS_ECDH_RSA_WITH_AES_256_CBC_SHA", 49167, 4492, 7, 14), 
    as("TLS_ECDHE_RSA_WITH_NULL_SHA", 49168, 4492, 7, 14), 
    at("TLS_ECDHE_RSA_WITH_RC4_128_SHA", 49169, 4492, 7, 14), 
    au("TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA", 49170, 4492, 7, 14), 
    av("TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA", 49171, 4492, 7, 14), 
    aw("TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA", 49172, 4492, 7, 14), 
    ax("TLS_ECDH_anon_WITH_NULL_SHA", 49173, 4492, 7, 14), 
    ay("TLS_ECDH_anon_WITH_RC4_128_SHA", 49174, 4492, 7, 14), 
    az("TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA", 49175, 4492, 7, 14), 
    b("SSL_RSA_WITH_NULL_SHA", 2, 5246, 6, 10), 
    c("SSL_RSA_EXPORT_WITH_RC4_40_MD5", 3, 4346, 6, 10), 
    d("SSL_RSA_WITH_RC4_128_MD5", 4, 5246, 6, 10), 
    e("SSL_RSA_WITH_RC4_128_SHA", 5, 5246, 6, 10), 
    f("SSL_RSA_EXPORT_WITH_DES40_CBC_SHA", 8, 4346, 6, 10), 
    g("SSL_RSA_WITH_DES_CBC_SHA", 9, 5469, 6, 10), 
    h("SSL_RSA_WITH_3DES_EDE_CBC_SHA", 10, 5246, 6, 10), 
    i("SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA", 17, 4346, 6, 10), 
    j("SSL_DHE_DSS_WITH_DES_CBC_SHA", 18, 5469, 6, 10), 
    k("SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA", 19, 5246, 6, 10), 
    l("SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA", 20, 4346, 6, 10), 
    m("SSL_DHE_RSA_WITH_DES_CBC_SHA", 21, 5469, 6, 10), 
    n("SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA", 22, 5246, 6, 10), 
    o("SSL_DH_anon_EXPORT_WITH_RC4_40_MD5", 23, 4346, 6, 10), 
    p("SSL_DH_anon_WITH_RC4_128_MD5", 24, 5246, 6, 10), 
    q("SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA", 25, 4346, 6, 10), 
    r("SSL_DH_anon_WITH_DES_CBC_SHA", 26, 5469, 6, 10), 
    s("SSL_DH_anon_WITH_3DES_EDE_CBC_SHA", 27, 5246, 6, 10), 
    t("TLS_KRB5_WITH_DES_CBC_SHA", 30, 2712, 6, Integer.MAX_VALUE), 
    u("TLS_KRB5_WITH_3DES_EDE_CBC_SHA", 31, 2712, 6, Integer.MAX_VALUE), 
    v("TLS_KRB5_WITH_RC4_128_SHA", 32, 2712, 6, Integer.MAX_VALUE), 
    w("TLS_KRB5_WITH_DES_CBC_MD5", 34, 2712, 6, Integer.MAX_VALUE), 
    x("TLS_KRB5_WITH_3DES_EDE_CBC_MD5", 35, 2712, 6, Integer.MAX_VALUE), 
    y("TLS_KRB5_WITH_RC4_128_MD5", 36, 2712, 6, Integer.MAX_VALUE), 
    z("TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA", 38, 2712, 6, Integer.MAX_VALUE);
    
    final String aS;
    
    private i(final String as, final int n2, final int n3, final int n4, final int n5) {
        this.aS = as;
    }
    
    public static i a(final String s) {
        if (s.startsWith("SSL_")) {
            return valueOf("TLS_" + s.substring(4));
        }
        return valueOf(s);
    }
}
